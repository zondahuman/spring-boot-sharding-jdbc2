<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.abin.lee.sharding.jdbc.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.abin.lee.sharding.jdbc.entity.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="business_id" property="businessId" jdbcType="BIGINT" />
    <result column="order_price" property="orderPrice" jdbcType="DECIMAL" />
    <result column="order_count" property="orderCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, business_id, order_price, order_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.abin.lee.sharding.jdbc.entity.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.abin.lee.sharding.jdbc.entity.OrderExample" >
    delete from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.abin.lee.sharding.jdbc.entity.Order" >
    <!--<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >-->
      <!--SELECT LAST_INSERT_ID()-->
    <!--</selectKey>-->
    insert into t_order (id, user_id, business_id, order_price,
      order_count)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{businessId,jdbcType=BIGINT}, #{orderPrice,jdbcType=DECIMAL},
      #{orderCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.abin.lee.sharding.jdbc.entity.Order" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="businessId != null" >
        business_id,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="orderCount != null" >
        order_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="businessId != null" >
        #{businessId,jdbcType=BIGINT},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderCount != null" >
        #{orderCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.abin.lee.sharding.jdbc.entity.OrderExample" resultType="java.lang.Integer" >
    select count(*) from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.businessId != null" >
        business_id = #{record.businessId,jdbcType=BIGINT},
      </if>
      <if test="record.orderPrice != null" >
        order_price = #{record.orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.orderCount != null" >
        order_count = #{record.orderCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      business_id = #{record.businessId,jdbcType=BIGINT},
      order_price = #{record.orderPrice,jdbcType=DECIMAL},
      order_count = #{record.orderCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.abin.lee.sharding.jdbc.entity.Order" >
    update t_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="businessId != null" >
        business_id = #{businessId,jdbcType=BIGINT},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderCount != null" >
        order_count = #{orderCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.abin.lee.sharding.jdbc.entity.Order" >
    update t_order
    set user_id = #{userId,jdbcType=BIGINT},
      business_id = #{businessId,jdbcType=BIGINT},
      order_price = #{orderPrice,jdbcType=DECIMAL},
      order_count = #{orderCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>



  <select id="selectById" resultType="int" parameterType="java.lang.Long" >
    select
      count(*)
    from t_order tor inner join t_order_item toi on tor.id=toi.order_id
      where tor.id = #{id,jdbcType=BIGINT}
  </select>


  <select id="selectByUserId" resultType="int" parameterType="java.lang.Long" >
    select
    count(*)
    from t_order tor inner join t_order_item toi on tor.id=toi.order_id
    where tor.user_id = #{userId,jdbcType=BIGINT}
  </select>


  <select id="selectListByUserId" resultType="com.abin.lee.sharding.jdbc.vo.OrderItemMixedBean" parameterType="java.lang.Long" >
    select
    tor.id as id,
    tor.user_id as userId,
    tor.business_id as businessId,
    tor.order_price as orderPrice,
    tor.order_count as orderCount,

    toi.id as itemId,
    toi.order_id as orderId,
    toi.user_id as userItemId,
    toi.business_name as businessName,
    toi.business_desc as businessDesc
    from t_order tor inner join t_order_item toi on tor.id=toi.order_id
    where tor.user_id = #{userId,jdbcType=BIGINT}
    group by toi.business_name
    order by toi.order_id asc
  </select>


</mapper>